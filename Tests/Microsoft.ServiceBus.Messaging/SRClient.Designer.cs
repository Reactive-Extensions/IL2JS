//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.ServiceBus {
    
    
    internal partial class SRClient {
        
        static System.Resources.ResourceManager resourceManager;
        
        static System.Globalization.CultureInfo resourceCulture;
        
        private SRClient() {
        }
        
        internal static System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceManager, null)) {
                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("Microsoft.ServiceBus.SRClient", typeof(SRClient).Assembly);
                    resourceManager = temp;
                }
                return resourceManager;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("StrictResXFileCodeGenerator", "4.0.0.0")]
        internal static System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>Gets localized string like: This messaging entity is not in an open state.</summary>
        internal static string MessageEntityNotOpened {
            get {
                return ResourceManager.GetString("MessageEntityNotOpened", Culture);
            }
        }
        
        /// <summary>Gets localized string like: This messaging entity has already been closed, aborted, or disposed.</summary>
        internal static string MessageEntityDisposed {
            get {
                return ResourceManager.GetString("MessageEntityDisposed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The messaging body cannot be read multiple times. To reuse it, store the value after reading.</summary>
        internal static string MessageBodyConsumed {
            get {
                return ResourceManager.GetString("MessageBodyConsumed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The XML returned is not in the expected format.</summary>
        internal static string InvalidXmlFormat {
            get {
                return ResourceManager.GetString("InvalidXmlFormat", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The buffer has already been reclaimed.</summary>
        internal static string BufferAlreadyReclaimed {
            get {
                return ResourceManager.GetString("BufferAlreadyReclaimed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: A received message cannot be directly sent to another entity. Construct a new message object instead.</summary>
        internal static string CannotSendReceivedMessage {
            get {
                return ResourceManager.GetString("CannotSendReceivedMessage", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The only supported IsolationLevel is 'IsolationLevel.Serializable'.</summary>
        internal static string IsolationLevelNotSupported {
            get {
                return ResourceManager.GetString("IsolationLevelNotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The message body is null.</summary>
        internal static string MessageBodyNull {
            get {
                return ResourceManager.GetString("MessageBodyNull", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Read not supported on this stream.</summary>
        internal static string ReadNotSupported {
            get {
                return ResourceManager.GetString("ReadNotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Seek not supported on this stream.</summary>
        internal static string SeekNotSupported {
            get {
                return ResourceManager.GetString("SeekNotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Value must be non-negative.</summary>
        internal static string ValueMustBeNonNegative {
            get {
                return ResourceManager.GetString("ValueMustBeNonNegative", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Failed to serialize the message because its body stream has been partially consumed.</summary>
        internal static string CannotSerializeMessageWithPartiallyConsumedBodyStream {
            get {
                return ResourceManager.GetString("CannotSerializeMessageWithPartiallyConsumedBodyStream", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Failed to serialize the message because the number of bytes read from its body stream did not match the expected length.</summary>
        internal static string FailedToSerializeEntireBodyStream {
            get {
                return ResourceManager.GetString("FailedToSerializeEntireBodyStream", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Failed to deserialize the message because the number of bytes read from its body stream did not match the expected length.</summary>
        internal static string FailedToDeSerializeEntireBodyStream {
            get {
                return ResourceManager.GetString("FailedToDeSerializeEntireBodyStream", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Failed to serialize the session state because its state stream has been partially consumed.</summary>
        internal static string CannotSerializeSessionStateWithPartiallyConsumedStream {
            get {
                return ResourceManager.GetString("CannotSerializeSessionStateWithPartiallyConsumedStream", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Failed to serialize the session state because the number of bytes read from its state stream did not match the expected length.</summary>
        internal static string FailedToSerializeEntireSessionStateStream {
            get {
                return ResourceManager.GetString("FailedToSerializeEntireSessionStateStream", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Failed to deserialize the session state because the number of bytes read from its state stream did not match the expected length.</summary>
        internal static string FailedToDeSerializeEntireSessionStateStream {
            get {
                return ResourceManager.GetString("FailedToDeSerializeEntireSessionStateStream", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Sbmp</summary>
        internal static string SbmpTransport {
            get {
                return ResourceManager.GetString("SbmpTransport", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Local transactions are not supported with other resource managers/DTC.</summary>
        internal static string MultipleResourceManagersNotSupported {
            get {
                return ResourceManager.GetString("MultipleResourceManagersNotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Internal Server Error: The server did not provide a meaningful reply; this might be caused by a premature session shutdown.</summary>
        internal static string ServerDidNotReply {
            get {
                return ResourceManager.GetString("ServerDidNotReply", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot directly create a client on a subqueue. Create a client on the main queue and use that to create receivers on the appropriate subqueue.</summary>
        internal static string CannotCreateClientOnSubQueue {
            get {
                return ResourceManager.GetString("CannotCreateClientOnSubQueue", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot perform this operation on a session browser.</summary>
        internal static string InvalidOperationOnSessionBrowser {
            get {
                return ResourceManager.GetString("InvalidOperationOnSessionBrowser", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The BatchFlushInterval that is specified in the settings is not valid.</summary>
        internal static string InvalidBatchFlushInterval {
            get {
                return ResourceManager.GetString("InvalidBatchFlushInterval", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The filter expression computation time exceeded the allowed value. Reduce the complexity of the expression.</summary>
        internal static string FilterExpressionTooComplex {
            get {
                return ResourceManager.GetString("FilterExpressionTooComplex", Culture);
            }
        }
        
        /// <summary>Gets localized string like: This operation is only supported for a message receiver in 'PeekLock' receive mode.</summary>
        internal static string PeekLockModeRequired {
            get {
                return ResourceManager.GetString("PeekLockModeRequired", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The action must be processed.</summary>
        internal static string ActionMustBeProcessed {
            get {
                return ResourceManager.GetString("ActionMustBeProcessed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The filter must be processed.</summary>
        internal static string FilterMustBeProcessed {
            get {
                return ResourceManager.GetString("FilterMustBeProcessed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The operation cannot be performed because the entity has been closed or aborted.</summary>
        internal static string EntityClosedOrAborted {
            get {
                return ResourceManager.GetString("EntityClosedOrAborted", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Error during communication with Service Bus. Check the connection information, then retry.</summary>
        internal static string MessagingCommunicationError {
            get {
                return ResourceManager.GetString("MessagingCommunicationError", Culture);
            }
        }
        
        /// <summary>Gets localized string like: This async operation is being aborted because the overall batching operation was aborted.</summary>
        internal static string BatchManagerAborted {
            get {
                return ResourceManager.GetString("BatchManagerAborted", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot create a MessageSession for a subqueue.</summary>
        internal static string CannotCreateMessageSessionForSubQueue {
            get {
                return ResourceManager.GetString("CannotCreateMessageSessionForSubQueue", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Use overload which allows specifying a base address.</summary>
        internal static string UseOverloadWithBaseAddress {
            get {
                return ResourceManager.GetString("UseOverloadWithBaseAddress", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Filter property must be set to a valid FilterTemplate instance.</summary>
        internal static string RuleCreationActionRequiresFilterTemplate {
            get {
                return ResourceManager.GetString("RuleCreationActionRequiresFilterTemplate", Culture);
            }
        }
        
        /// <summary>Gets localized string like: At least one system or user property must be set for a correlation filter.</summary>
        internal static string EmptyPropertyInCorrelationFilter {
            get {
                return ResourceManager.GetString("EmptyPropertyInCorrelationFilter", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid RefcountedCommunicationObject usage.</summary>
        internal static string InvalidRefcountedCommunicationObject {
            get {
                return ResourceManager.GetString("InvalidRefcountedCommunicationObject", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid state-machine in RefcountedCommunicationObject.</summary>
        internal static string InvalidStateMachineRefcountedCommunicationObject {
            get {
                return ResourceManager.GetString("InvalidStateMachineRefcountedCommunicationObject", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Token provider and credentials cannot be used together.</summary>
        internal static string ProviderCredentialsConfigurationError {
            get {
                return ResourceManager.GetString("ProviderCredentialsConfigurationError", Culture);
            }
        }
        
        /// <summary>Gets localized string like: ConnectionStatusBehavior requires an IChannelListener that exposes IConnectionStatus.</summary>
        internal static string ConnectionStatusBehavior {
            get {
                return ResourceManager.GetString("ConnectionStatusBehavior", Culture);
            }
        }
        
        /// <summary>Gets localized string like: ChunkingBindingElement requires an inner binding element that supports IDuplexSessionChannel.</summary>
        internal static string IDuplexSessionChannelRequired {
            get {
                return ResourceManager.GetString("IDuplexSessionChannelRequired", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The method or operation is not implemented.</summary>
        internal static string MethodNotImplemented {
            get {
                return ResourceManager.GetString("MethodNotImplemented", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unexpected ChunkingState value.</summary>
        internal static string UnexpectedChunkingStateValueInvalidOperation {
            get {
                return ResourceManager.GetString("UnexpectedChunkingStateValueInvalidOperation", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Stream was closed.</summary>
        internal static string StreamClosed {
            get {
                return ResourceManager.GetString("StreamClosed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid Call.</summary>
        internal static string InvalidCallFaultException {
            get {
                return ResourceManager.GetString("InvalidCallFaultException", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Maximum connect attempts exceeded.</summary>
        internal static string MaximumAttemptsExceeded {
            get {
                return ResourceManager.GetString("MaximumAttemptsExceeded", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Connect process failed.</summary>
        internal static string ConnectFailed {
            get {
                return ResourceManager.GetString("ConnectFailed", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid id.</summary>
        internal static string InvalidID {
            get {
                return ResourceManager.GetString("InvalidID", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Endpoint not found.</summary>
        internal static string EndpointNotFound {
            get {
                return ResourceManager.GetString("EndpointNotFound", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Duplicate connection ID.</summary>
        internal static string DuplicateConnectionID {
            get {
                return ResourceManager.GetString("DuplicateConnectionID", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid buffer size.</summary>
        internal static string InvalidBufferSize {
            get {
                return ResourceManager.GetString("InvalidBufferSize", Culture);
            }
        }
        
        /// <summary>Gets localized string like: listener.Type length exceeds maximum allowed.</summary>
        internal static string ListenerLengthArgumentOutOfRange {
            get {
                return ResourceManager.GetString("ListenerLengthArgumentOutOfRange", Culture);
            }
        }
        
        /// <summary>Gets localized string like: CredentialType is either unrecognized or unable to create Http Auth token.</summary>
        internal static string UnrecognizedCredentialType {
            get {
                return ResourceManager.GetString("UnrecognizedCredentialType", Culture);
            }
        }
        
        /// <summary>Gets localized string like: messageBufferUri URI cannot have any query parameters.</summary>
        internal static string MessageBufferURI {
            get {
                return ResourceManager.GetString("MessageBufferURI", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unable to retrieve LockedMessageInfo property from message.</summary>
        internal static string LockedMessageInfo {
            get {
                return ResourceManager.GetString("LockedMessageInfo", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Policy is read-only.</summary>
        internal static string ReadOnlyPolicy {
            get {
                return ResourceManager.GetString("ReadOnlyPolicy", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The method or operation is not implemented.</summary>
        internal static string NotImplementedException {
            get {
                return ResourceManager.GetString("NotImplementedException", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Endpoint not found.</summary>
        internal static string EndpointNotFoundFault {
            get {
                return ResourceManager.GetString("EndpointNotFoundFault", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Duplicate connection ID.</summary>
        internal static string DuplicateConnectionIDFault {
            get {
                return ResourceManager.GetString("DuplicateConnectionIDFault", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid configuration. Unable to use transport protection with Hybrid mode.</summary>
        internal static string InvalidConfiguration {
            get {
                return ResourceManager.GetString("InvalidConfiguration", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Transport security is required to protect the security token. The URI schema must be set to HTTPS.</summary>
        internal static string TransportSecurity {
            get {
                return ResourceManager.GetString("TransportSecurity", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The token provider does not support Http Auth token.</summary>
        internal static string HTTPAuthTokenNotSupportedException {
            get {
                return ResourceManager.GetString("HTTPAuthTokenNotSupportedException", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The message has an unexpected format other than SOAP and Http.</summary>
        internal static string UnexpectedFormat {
            get {
                return ResourceManager.GetString("UnexpectedFormat", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Invalid channel type.</summary>
        internal static string InvalidChannelType {
            get {
                return ResourceManager.GetString("InvalidChannelType", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Incompatible channel listener settings.</summary>
        internal static string IncompatibleChannelListener {
            get {
                return ResourceManager.GetString("IncompatibleChannelListener", Culture);
            }
        }
        
        /// <summary>Gets localized string like: SamlCredential and its SamlToken cannot be null or empty.</summary>
        internal static string NullSAMLs {
            get {
                return ResourceManager.GetString("NullSAMLs", Culture);
            }
        }
        
        /// <summary>Gets localized string like: stsUri must end with a '/'.</summary>
        internal static string STSURIFormat {
            get {
                return ResourceManager.GetString("STSURIFormat", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Parameter issuerName cannot be null or empty.</summary>
        internal static string NullIssuerName {
            get {
                return ResourceManager.GetString("NullIssuerName", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Parameter issuerSecret cannot be null or empty.</summary>
        internal static string NullIssuerSecret {
            get {
                return ResourceManager.GetString("NullIssuerSecret", Culture);
            }
        }
        
        /// <summary>Gets localized string like: issuerSecret is invalid.</summary>
        internal static string InvalidIssuerSecret {
            get {
                return ResourceManager.GetString("InvalidIssuerSecret", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The provided token does not specify the ExpiresOn value.</summary>
        internal static string TokenExpiresOn {
            get {
                return ResourceManager.GetString("TokenExpiresOn", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The string has an invalid encoding.</summary>
        internal static string InvalidEncoding {
            get {
                return ResourceManager.GetString("InvalidEncoding", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The string has an invalid encoding.</summary>
        internal static string UnsupportedEncodingType {
            get {
                return ResourceManager.GetString("UnsupportedEncodingType", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Parameter simpleWebToken cannot be null or empty.</summary>
        internal static string NullSimpleWebToken {
            get {
                return ResourceManager.GetString("NullSimpleWebToken", Culture);
            }
        }
        
        /// <summary>Gets localized string like: 'value' must be at least 1.</summary>
        internal static string ArgumentOutOfRangeLessThanOne {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeLessThanOne", Culture);
            }
        }
        
        /// <summary>Gets localized string like: This TokenProvider does not support BeginGetWebToken.</summary>
        internal static string BeginGetWebTokenNotSupported {
            get {
                return ResourceManager.GetString("BeginGetWebTokenNotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Parameter appliesTo cannot be null or empty.</summary>
        internal static string NullAppliesTo {
            get {
                return ResourceManager.GetString("NullAppliesTo", Culture);
            }
        }
        
        /// <summary>Gets localized string like: hostname cannot be null or empty.</summary>
        internal static string NullHostname {
            get {
                return ResourceManager.GetString("NullHostname", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The timeout is too large.</summary>
        internal static string TimeoutExceeded {
            get {
                return ResourceManager.GetString("TimeoutExceeded", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Transport security is required if passing credentials to the message buffer. The URI scheme must be set to HTTPS.</summary>
        internal static string MessageBufferTransportSecurity {
            get {
                return ResourceManager.GetString("MessageBufferTransportSecurity", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Already running.</summary>
        internal static string AlreadyRunning {
            get {
                return ResourceManager.GetString("AlreadyRunning", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unexpected SSL signal value in preamble message - " + sslSignalByte[0].</summary>
        internal static string UnexpectedSSL {
            get {
                return ResourceManager.GetString("UnexpectedSSL", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot find relay certificate.</summary>
        internal static string RelayCertificateNotFound {
            get {
                return ResourceManager.GetString("RelayCertificateNotFound", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Message exceeds maximum message size.</summary>
        internal static string MessageSizeExceeded {
            get {
                return ResourceManager.GetString("MessageSizeExceeded", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Did not receive any bytes from expected read.</summary>
        internal static string ExpectedBytesNotRead {
            get {
                return ResourceManager.GetString("ExpectedBytesNotRead", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unable to connect to Service Bus using HTTP connectivity mode.</summary>
        internal static string HTTPConnectivityMode {
            get {
                return ResourceManager.GetString("HTTPConnectivityMode", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unable to connect downstream.</summary>
        internal static string DownstreamConnection {
            get {
                return ResourceManager.GetString("DownstreamConnection", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unable to close connection.</summary>
        internal static string ConnectionTermination {
            get {
                return ResourceManager.GetString("ConnectionTermination", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unable to connect upstream.</summary>
        internal static string UpstreamConnection {
            get {
                return ResourceManager.GetString("UpstreamConnection", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Error creating endpoint Uri for connecting to the Service Bus.</summary>
        internal static string URIEndpoint {
            get {
                return ResourceManager.GetString("URIEndpoint", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Faulty response from factory endpoint - locations were not returned.</summary>
        internal static string FaultyEndpointResponse {
            get {
                return ResourceManager.GetString("FaultyEndpointResponse", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unable to connect to factory endpoint.</summary>
        internal static string FactoryEndpoint {
            get {
                return ResourceManager.GetString("FactoryEndpoint", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The web stream has been shut down - can no longer write to the stream.</summary>
        internal static string WebStreamShutdown {
            get {
                return ResourceManager.GetString("WebStreamShutdown", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot set the value at this time.</summary>
        internal static string ValueVisibility {
            get {
                return ResourceManager.GetString("ValueVisibility", Culture);
            }
        }
        
        /// <summary>Gets localized string like: More than one relay 'connection-mode' assertion was found.</summary>
        internal static string MultipleConnectionModeAssertions {
            get {
                return ResourceManager.GetString("MultipleConnectionModeAssertions", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Unsupported ITokenProvider type.</summary>
        internal static string ITokenProviderType {
            get {
                return ResourceManager.GetString("ITokenProviderType", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Manually issuing credit on a link with auto-flow enabled is not allowed.</summary>
        internal static string EnabledAutoFlowCreditIssuing {
            get {
                return ResourceManager.GetString("EnabledAutoFlowCreditIssuing", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Open was already called for this object.</summary>
        internal static string InvalidReOpenOperation {
            get {
                return ResourceManager.GetString("InvalidReOpenOperation", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The delivery id is already used.</summary>
        internal static string DeliveryIDInUse {
            get {
                return ResourceManager.GetString("DeliveryIDInUse", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot convert the AMQP char to a C# char object.</summary>
        internal static string CannotConvertAMQPCharToCSCharObject {
            get {
                return ResourceManager.GetString("CannotConvertAMQPCharToCSCharObject", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The list size must be exactly the same as the encoded value length.</summary>
        internal static string MismatchedListSizeEncodedValueLength {
            get {
                return ResourceManager.GetString("MismatchedListSizeEncodedValueLength", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Message listener is already registered.</summary>
        internal static string MessageListenerAlreadyRegistered {
            get {
                return ResourceManager.GetString("MessageListenerAlreadyRegistered", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Credit listener is already registered.</summary>
        internal static string CreditListenerAlreadyRegistered {
            get {
                return ResourceManager.GetString("CreditListenerAlreadyRegistered", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Disposition listener is already registered.</summary>
        internal static string DispositionListenerAlreadyRegistered {
            get {
                return ResourceManager.GetString("DispositionListenerAlreadyRegistered", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Not supported when the disposition listener is set.</summary>
        internal static string DispositionListenerSetNotSupported {
            get {
                return ResourceManager.GetString("DispositionListenerSetNotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The end point on which to listen must be an IP endpoint.</summary>
        internal static string ListenOnIPEndpoint {
            get {
                return ResourceManager.GetString("ListenOnIPEndpoint", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot set target host because the server certificate is already set.</summary>
        internal static string ServerCertificateAlreadySet {
            get {
                return ResourceManager.GetString("ServerCertificateAlreadySet", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Cannot set server certificate because the client target host is already set.</summary>
        internal static string ClientTargetHostAlreadySet {
            get {
                return ResourceManager.GetString("ClientTargetHostAlreadySet", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Either the client target host or the server certificate must be set.</summary>
        internal static string ClientTargetHostServerCertificateNotSet {
            get {
                return ResourceManager.GetString("ClientTargetHostServerCertificateNotSet", Culture);
            }
        }
        
        /// <summary>Gets localized string like: TargetHost must be set.</summary>
        internal static string TargetHostNotSet {
            get {
                return ResourceManager.GetString("TargetHostNotSet", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Service certificate must be set.</summary>
        internal static string ServerCertificateNotSet {
            get {
                return ResourceManager.GetString("ServerCertificateNotSet", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Protocol versions not set.</summary>
        internal static string ProtocolVersionNotSet {
            get {
                return ResourceManager.GetString("ProtocolVersionNotSet", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The async result is still in use.</summary>
        internal static string AsyncResultInUse {
            get {
                return ResourceManager.GetString("AsyncResultInUse", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The async result is different.</summary>
        internal static string AsyncResultDifferent {
            get {
                return ResourceManager.GetString("AsyncResultDifferent", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The async result is not in use.</summary>
        internal static string AsyncResultNotInUse {
            get {
                return ResourceManager.GetString("AsyncResultNotInUse", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The batched version of the API is not supported.</summary>
        internal static string BatchAPINotSupported {
            get {
                return ResourceManager.GetString("BatchAPINotSupported", Culture);
            }
        }
        
        /// <summary>Gets localized string like: resourceDescriptions is null or empty.</summary>
        internal static string NullResourceDescription {
            get {
                return ResourceManager.GetString("NullResourceDescription", Culture);
            }
        }
        
        /// <summary>Gets localized string like: resourceNames is null or empty.</summary>
        internal static string NullResourceName {
            get {
                return ResourceManager.GetString("NullResourceName", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Service namespace cannot be null or empty.</summary>
        internal static string NullServiceNameSpace {
            get {
                return ResourceManager.GetString("NullServiceNameSpace", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Path segments in 'servicePath' can only contain ASCII characters.</summary>
        internal static string PathSegmentASCIICharacters {
            get {
                return ResourceManager.GetString("PathSegmentASCIICharacters", Culture);
            }
        }
        
        /// <summary>Gets localized string like: SystemTracker header not present.</summary>
        internal static string SystemTrackerHeaderMissing {
            get {
                return ResourceManager.GetString("SystemTrackerHeaderMissing", Culture);
            }
        }
        
        /// <summary>Gets localized string like: SystemTracker property not present.</summary>
        internal static string SystemTrackerPropertyMissing {
            get {
                return ResourceManager.GetString("SystemTrackerPropertyMissing", Culture);
            }
        }
        
        /// <summary>Gets localized string like: TrackinID header not present.</summary>
        internal static string TrackingIDHeaderMissing {
            get {
                return ResourceManager.GetString("TrackingIDHeaderMissing", Culture);
            }
        }
        
        /// <summary>Gets localized string like: TrackingID property not present.</summary>
        internal static string TrackingIDPropertyMissing {
            get {
                return ResourceManager.GetString("TrackingIDPropertyMissing", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The lock supplied is invalid. Either the lock expired, or the message has already been removed from the queue.</summary>
        internal static string MessageLockLost {
            get {
                return ResourceManager.GetString("MessageLockLost", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The AMQP object is currently busy re-establishing the communication with the server. Please wait and retry.</summary>
        internal static string AmqpObjectBusy {
            get {
                return ResourceManager.GetString("AmqpObjectBusy", Culture);
            }
        }
        
        /// <summary>Gets localized string like: IOThreadTimer cannot accept Timespan.MaxValue.</summary>
        internal static string IOThreadTimerCannotAcceptMaxTimeSpan {
            get {
                return ResourceManager.GetString("IOThreadTimerCannotAcceptMaxTimeSpan", Culture);
            }
        }
        
        /// <summary>Gets localized string like: No session-id is returned for a session receiver.</summary>
        internal static string AmqpFieldSessionId {
            get {
                return ResourceManager.GetString("AmqpFieldSessionId", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The message body type is invalid.</summary>
        internal static string AmqpInvalidMessageBodyType {
            get {
                return ResourceManager.GetString("AmqpInvalidMessageBodyType", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Object is not open.</summary>
        internal static string AmqpUnopenObject {
            get {
                return ResourceManager.GetString("AmqpUnopenObject", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Socket communication error.</summary>
        internal static string ConnectFailedCommunicationException {
            get {
                return ResourceManager.GetString("ConnectFailedCommunicationException", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Can't create session when the connection is closing.</summary>
        internal static string CreateSessionOnClosingConnection {
            get {
                return ResourceManager.GetString("CreateSessionOnClosingConnection", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Fail to convert to a char</summary>
        internal static string ErroConvertingToChar {
            get {
                return ResourceManager.GetString("ErroConvertingToChar", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The length of received content is not correct.</summary>
        internal static string InvalidLengthofReceivedContent {
            get {
                return ResourceManager.GetString("InvalidLengthofReceivedContent", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Received empty content, or invalid type of content.</summary>
        internal static string InvalidReceivedContent {
            get {
                return ResourceManager.GetString("InvalidReceivedContent", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The session id from received content is not match.</summary>
        internal static string InvalidReceivedSessionId {
            get {
                return ResourceManager.GetString("InvalidReceivedSessionId", Culture);
            }
        }
        
        /// <summary>Gets localized string like: More than one address candidate exist with given type.</summary>
        internal static string MoreThanOneAddressCandidate {
            get {
                return ResourceManager.GetString("MoreThanOneAddressCandidate", Culture);
            }
        }
        
        /// <summary>Gets localized string like: More than one IPEndPoint exist with given type</summary>
        internal static string MoreThanOneIPEndPoint {
            get {
                return ResourceManager.GetString("MoreThanOneIPEndPoint", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Given type of channel is not supported.</summary>
        internal static string NotSupportedTypeofChannel {
            get {
                return ResourceManager.GetString("NotSupportedTypeofChannel", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Can't find appropriate address.</summary>
        internal static string NoValidHostAddress {
            get {
                return ResourceManager.GetString("NoValidHostAddress", Culture);
            }
        }
        
        /// <summary>Gets localized string like: Can't read raw data from token.</summary>
        internal static string NullRawDataInToken {
            get {
                return ResourceManager.GetString("NullRawDataInToken", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The root is null.</summary>
        internal static string NullRoot {
            get {
                return ResourceManager.GetString("NullRoot", Culture);
            }
        }
        
        /// <summary>Gets localized string like: None of the server sasl-mechanism can be supported.</summary>
        internal static string AmqpNotSupportMechanism {
            get {
                return ResourceManager.GetString("AmqpNotSupportMechanism", Culture);
            }
        }
        
        /// <summary>Gets localized string like: The communication object, {0}, cannot be used because it is in a faulted state.</summary>
        /// <param name="param0">Parameter 0 for string: The communication object, {0}, cannot be used because it is in a faulted state.</param>
        internal static string CommunicationObjectFaulted(object param0) {
            return string.Format(Culture, ResourceManager.GetString("CommunicationObjectFaulted", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The entity path/name '{0}' exceeds the '{1}' character limit.</summary>
        /// <param name="param0">Parameter 0 for string: The entity path/name '{0}' exceeds the '{1}' character limit.</param>
        /// <param name="param1">Parameter 1 for string: The entity path/name '{0}' exceeds the '{1}' character limit.</param>
        internal static string EntityNameLengthExceedsLimit(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("EntityNameLengthExceedsLimit", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The supplied lock time exceeds the allowed maximum of '{0}' minutes.</summary>
        /// <param name="param0">Parameter 0 for string: The supplied lock time exceeds the allowed maximum of '{0}' minutes.</param>
        internal static string LockTimeExceedsMaximumAllowed(object param0) {
            return string.Format(Culture, ResourceManager.GetString("LockTimeExceedsMaximumAllowed", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The supplied duplicate detection history duration exceeds the maximum allowed value of '{0}' minutes.</summary>
        /// <param name="param0">Parameter 0 for string: The supplied duplicate detection history duration exceeds the maximum allowed value of '{0}' minutes.</param>
        internal static string DuplicateHistoryExpiryTimeExceedsMaximumAllowed(object param0) {
            return string.Format(Culture, ResourceManager.GetString("DuplicateHistoryExpiryTimeExceedsMaximumAllowed", Culture), param0);
        }
        
        /// <summary>Gets localized string like: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</summary>
        /// <param name="param0">Parameter 0 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</param>
        /// <param name="param1">Parameter 1 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</param>
        /// <param name="param2">Parameter 2 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}]</param>
        internal static string SQLSyntaxError(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("SQLSyntaxError", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </summary>
        /// <param name="param0">Parameter 0 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
        /// <param name="param1">Parameter 1 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
        /// <param name="param2">Parameter 2 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
        /// <param name="param3">Parameter 3 for string: There was an error parsing the SQL expression. [Token line={0}, column={1}, Token in error= {2}, Additional details= {3}] </param>
        internal static string SQLSyntaxErrorDetailed(object param0, object param1, object param2, object param3) {
            return string.Format(Culture, ResourceManager.GetString("SQLSyntaxErrorDetailed", Culture), param0, param1, param2, param3);
        }
        
        /// <summary>Gets localized string like: The provided URI scheme '{0}' is invalid; expected '{1}'.</summary>
        /// <param name="param0">Parameter 0 for string: The provided URI scheme '{0}' is invalid; expected '{1}'.</param>
        /// <param name="param1">Parameter 1 for string: The provided URI scheme '{0}' is invalid; expected '{1}'.</param>
        internal static string InvalidUriScheme(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("InvalidUriScheme", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The size quota for this stream ({0}) has been exceeded.</summary>
        /// <param name="param0">Parameter 0 for string: The size quota for this stream ({0}) has been exceeded.</param>
        internal static string BufferedOutputStreamQuotaExceeded(object param0) {
            return string.Format(Culture, ResourceManager.GetString("BufferedOutputStreamQuotaExceeded", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Messaging entity '{0}' already exists.</summary>
        /// <param name="param0">Parameter 0 for string: Messaging entity '{0}' already exists.</param>
        internal static string MessagingEntityAlreadyExists(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessagingEntityAlreadyExists", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Messaging entity '{0}' could not be found.</summary>
        /// <param name="param0">Parameter 0 for string: Messaging entity '{0}' could not be found.</param>
        internal static string MessagingEntityCouldNotBeFound(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessagingEntityCouldNotBeFound", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Error during communication with '{0}'. Check the connection information, then retry.</summary>
        /// <param name="param0">Parameter 0 for string: Error during communication with '{0}'. Check the connection information, then retry.</param>
        internal static string MessagingEndpointCommunicationError(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessagingEndpointCommunicationError", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The specified channel type {0} is not supported by this channel manager.</summary>
        /// <param name="param0">Parameter 0 for string: The specified channel type {0} is not supported by this channel manager.</param>
        internal static string ChannelTypeNotSupported(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ChannelTypeNotSupported", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The {1} binding does not have a configured binding named '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: The {1} binding does not have a configured binding named '{0}'.</param>
        /// <param name="param1">Parameter 1 for string: The {1} binding does not have a configured binding named '{0}'.</param>
        internal static string ConfigInvalidBindingConfigurationName(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ConfigInvalidBindingConfigurationName", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Could not resolve any addresses for entity '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Could not resolve any addresses for entity '{0}'.</param>
        internal static string NoAddressesFound(object param0) {
            return string.Format(Culture, ResourceManager.GetString("NoAddressesFound", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The operation cannot be performed because the brokered message '{0}' has already been consumed. Please use a new BrokeredMessage instance for the operation.</summary>
        /// <param name="param0">Parameter 0 for string: The operation cannot be performed because the brokered message '{0}' has already been consumed. Please use a new BrokeredMessage instance for the operation.</param>
        internal static string CannotUseSameMessageInstanceInMultipleOperations(object param0) {
            return string.Format(Culture, ResourceManager.GetString("CannotUseSameMessageInstanceInMultipleOperations", Culture), param0);
        }
        
        /// <summary>Gets localized string like: A message cannot have more than '{0}' properties. Found '{1}' properties.</summary>
        /// <param name="param0">Parameter 0 for string: A message cannot have more than '{0}' properties. Found '{1}' properties.</param>
        /// <param name="param1">Parameter 1 for string: A message cannot have more than '{0}' properties. Found '{1}' properties.</param>
        internal static string TooManyMessageProperties(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TooManyMessageProperties", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The size of message property '{0}' exceeds the limit of '{1}' bytes.</summary>
        /// <param name="param0">Parameter 0 for string: The size of message property '{0}' exceeds the limit of '{1}' bytes.</param>
        /// <param name="param1">Parameter 1 for string: The size of message property '{0}' exceeds the limit of '{1}' bytes.</param>
        internal static string ExceededMessagePropertySizeLimit(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ExceededMessagePropertySizeLimit", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The endpoint address '{0}' must specify the name of the messaging entity. Expected 'sb://resourcelocator/entityname'.</summary>
        /// <param name="param0">Parameter 0 for string: The endpoint address '{0}' must specify the name of the messaging entity. Expected 'sb://resourcelocator/entityname'.</param>
        internal static string EntityNameNotFound(object param0) {
            return string.Format(Culture, ResourceManager.GetString("EntityNameNotFound", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Serialization operation failed due to unsupported type {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Serialization operation failed due to unsupported type {0}.</param>
        internal static string FailedToSerializeUnsupportedType(object param0) {
            return string.Format(Culture, ResourceManager.GetString("FailedToSerializeUnsupportedType", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Deserialize operation failed due to unsupported property {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Deserialize operation failed due to unsupported property {0}.</param>
        internal static string FailedToDeserializeUnsupportedProperty(object param0) {
            return string.Format(Culture, ResourceManager.GetString("FailedToDeserializeUnsupportedProperty", Culture), param0);
        }
        
        /// <summary>Gets localized string like: There was an overflow when adding the values {0} and {1} of the type {2}.</summary>
        /// <param name="param0">Parameter 0 for string: There was an overflow when adding the values {0} and {1} of the type {2}.</param>
        /// <param name="param1">Parameter 1 for string: There was an overflow when adding the values {0} and {1} of the type {2}.</param>
        /// <param name="param2">Parameter 2 for string: There was an overflow when adding the values {0} and {1} of the type {2}.</param>
        internal static string OverflowWhenAddingException(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("OverflowWhenAddingException", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: The property {0} cannot be assigned to.</summary>
        /// <param name="param0">Parameter 0 for string: The property {0} cannot be assigned to.</param>
        internal static string MessageAttributeSetMethodNotAccessible(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessageAttributeSetMethodNotAccessible", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The property {0} cannot be assigned from.</summary>
        /// <param name="param0">Parameter 0 for string: The property {0} cannot be assigned from.</param>
        internal static string MessageAttributeGetMethodNotAccessible(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessageAttributeGetMethodNotAccessible", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The specified property {0} does not exist, or it is not a gettable property of the {1} class.</summary>
        /// <param name="param0">Parameter 0 for string: The specified property {0} does not exist, or it is not a gettable property of the {1} class.</param>
        /// <param name="param1">Parameter 1 for string: The specified property {0} does not exist, or it is not a gettable property of the {1} class.</param>
        internal static string MessageGetPropertyNotFound(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("MessageGetPropertyNotFound", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The length of the filter action statement is {0}, which exceeds the maximum length of {1}.</summary>
        /// <param name="param0">Parameter 0 for string: The length of the filter action statement is {0}, which exceeds the maximum length of {1}.</param>
        /// <param name="param1">Parameter 1 for string: The length of the filter action statement is {0}, which exceeds the maximum length of {1}.</param>
        internal static string SqlFilterActionStatmentTooLong(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("SqlFilterActionStatmentTooLong", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: There are {0} statements defined in the filter action, which exceeds the allowed maximum of {1}.</summary>
        /// <param name="param0">Parameter 0 for string: There are {0} statements defined in the filter action, which exceeds the allowed maximum of {1}.</param>
        /// <param name="param1">Parameter 1 for string: There are {0} statements defined in the filter action, which exceeds the allowed maximum of {1}.</param>
        internal static string FilterActionTooManyStatements(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("FilterActionTooManyStatements", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' Removing message from the correlation set.</summary>
        /// <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' Removing message from the correlation set.</param>
        /// <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' Removing message from the correlation set.</param>
        internal static string CleanupCorrelationMessage(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("CleanupCorrelationMessage", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' This correlation response was previously received or not expected.</summary>
        /// <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' This correlation response was previously received or not expected.</param>
        /// <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' This correlation response was previously received or not expected.</param>
        internal static string NoCorrelationForChannelMessageId(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("NoCorrelationForChannelMessageId", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' There was no correlation response for the channel message.</summary>
        /// <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' There was no correlation response for the channel message.</param>
        /// <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' There was no correlation response for the channel message.</param>
        internal static string NoCorrelationResponseForChannelMessageId(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("NoCorrelationResponseForChannelMessageId", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: sessionId:messageId '{0}':'{1}' Sent a correlation message over the channel session.</summary>
        /// <param name="param0">Parameter 0 for string: sessionId:messageId '{0}':'{1}' Sent a correlation message over the channel session.</param>
        /// <param name="param1">Parameter 1 for string: sessionId:messageId '{0}':'{1}' Sent a correlation message over the channel session.</param>
        internal static string SentCorrelationMessage(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("SentCorrelationMessage", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: sessionId:relatesTo '{0}':'{1}' Received a correlation message over the channel session.</summary>
        /// <param name="param0">Parameter 0 for string: sessionId:relatesTo '{0}':'{1}' Received a correlation message over the channel session.</param>
        /// <param name="param1">Parameter 1 for string: sessionId:relatesTo '{0}':'{1}' Received a correlation message over the channel session.</param>
        internal static string ReceivedCorrelationMessage(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ReceivedCorrelationMessage", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The request has timed out after {0} milliseconds. The successful completion of the request cannot be determined. Additional queries should be made to determine whether or not the operation has succeeded.</summary>
        /// <param name="param0">Parameter 0 for string: The request has timed out after {0} milliseconds. The successful completion of the request cannot be determined. Additional queries should be made to determine whether or not the operation has succeeded.</param>
        internal static string OperationRequestTimedOut(object param0) {
            return string.Format(Culture, ResourceManager.GetString("OperationRequestTimedOut", Culture), param0);
        }
        
        /// <summary>Gets localized string like: An error occurred while creating the queue '{0}'. {1}</summary>
        /// <param name="param0">Parameter 0 for string: An error occurred while creating the queue '{0}'. {1}</param>
        /// <param name="param1">Parameter 1 for string: An error occurred while creating the queue '{0}'. {1}</param>
        internal static string QueueProvisioningError(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("QueueProvisioningError", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: An error occurred while deleting the queue '{0}'. {1}</summary>
        /// <param name="param0">Parameter 0 for string: An error occurred while deleting the queue '{0}'. {1}</param>
        /// <param name="param1">Parameter 1 for string: An error occurred while deleting the queue '{0}'. {1}</param>
        internal static string QueueUnProvisioningError(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("QueueUnProvisioningError", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</summary>
        /// <param name="param0">Parameter 0 for string: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</param>
        /// <param name="param1">Parameter 1 for string: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</param>
        /// <param name="param2">Parameter 2 for string: An error occurred while creating the subscription '{0}' for the topic {1}. {2}</param>
        internal static string SubscriptionProvisioningError(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("SubscriptionProvisioningError", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: An error occurred while creating the topic '{0}'. {1}</summary>
        /// <param name="param0">Parameter 0 for string: An error occurred while creating the topic '{0}'. {1}</param>
        /// <param name="param1">Parameter 1 for string: An error occurred while creating the topic '{0}'. {1}</param>
        internal static string TopicProvisioningError(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TopicProvisioningError", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: An error occurred while deleting the topic '{0}'. {1}</summary>
        /// <param name="param0">Parameter 0 for string: An error occurred while deleting the topic '{0}'. {1}</param>
        /// <param name="param1">Parameter 1 for string: An error occurred while deleting the topic '{0}'. {1}</param>
        internal static string TopicUnProvisioningError(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TopicUnProvisioningError", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</summary>
        /// <param name="param0">Parameter 0 for string: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</param>
        /// <param name="param1">Parameter 1 for string: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</param>
        /// <param name="param2">Parameter 2 for string: Incompatible queue export type. Expected type {0} or {1}. Specified type is {2}.</param>
        internal static string IncompatibleQueueExport(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("IncompatibleQueueExport", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</summary>
        /// <param name="param0">Parameter 0 for string: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</param>
        /// <param name="param1">Parameter 1 for string: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</param>
        /// <param name="param2">Parameter 2 for string: Incompatible topic export type. Expected type {0} or {1}. Specified type is {2}.</param>
        internal static string IncompatibleTopicExport(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("IncompatibleTopicExport", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: Provide a valid subqueue name. The allowed values are: '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Provide a valid subqueue name. The allowed values are: '{0}'.</param>
        internal static string InvalidSubQueueNameString(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidSubQueueNameString", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Cannot convert the filter action of type '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Cannot convert the filter action of type '{0}'.</param>
        internal static string CannotConvertFilterAction(object param0) {
            return string.Format(Culture, ResourceManager.GetString("CannotConvertFilterAction", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Cannot convert the filter expression of type '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Cannot convert the filter expression of type '{0}'.</param>
        internal static string CannotConvertFilterExpression(object param0) {
            return string.Format(Culture, ResourceManager.GetString("CannotConvertFilterExpression", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The Uri address given contains a path which is not allowed. Remove the path from the supplied uri {0}.</summary>
        /// <param name="param0">Parameter 0 for string: The Uri address given contains a path which is not allowed. Remove the path from the supplied uri {0}.</param>
        internal static string InvalidAddressPath(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidAddressPath", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The entity name or path cannot contain / as prefix or suffix. The supplied value is {0}.</summary>
        /// <param name="param0">Parameter 0 for string: The entity name or path cannot contain / as prefix or suffix. The supplied value is {0}.</param>
        internal static string InvalidEntityNameFormatWithSlash(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidEntityNameFormatWithSlash", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The entity name or path contains an invalid character {0}. The supplied value is {1}.</summary>
        /// <param name="param0">Parameter 0 for string: The entity name or path contains an invalid character {0}. The supplied value is {1}.</param>
        /// <param name="param1">Parameter 1 for string: The entity name or path contains an invalid character {0}. The supplied value is {1}.</param>
        internal static string InvalidCharacterInEntityName(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("InvalidCharacterInEntityName", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The value supplied must be between {0} and {1}.</summary>
        /// <param name="param0">Parameter 0 for string: The value supplied must be between {0} and {1}.</param>
        /// <param name="param1">Parameter 1 for string: The value supplied must be between {0} and {1}.</param>
        internal static string ArgumentOutOfRange(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ArgumentOutOfRange", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The length of the filter statement is {0}, which exceeds the maximum length of {1}</summary>
        /// <param name="param0">Parameter 0 for string: The length of the filter statement is {0}, which exceeds the maximum length of {1}</param>
        /// <param name="param1">Parameter 1 for string: The length of the filter statement is {0}, which exceeds the maximum length of {1}</param>
        internal static string SqlFilterStatmentTooLong(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("SqlFilterStatmentTooLong", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The message ID is either null, empty, or exceeds the maximum allowed size of {0} characters.</summary>
        /// <param name="param0">Parameter 0 for string: The message ID is either null, empty, or exceeds the maximum allowed size of {0} characters.</param>
        internal static string MessageIdIsNullOrEmptyOrOverMaxValue(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessageIdIsNullOrEmptyOrOverMaxValue", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The session ID exceeds the maximum allowed size of {0} characters.</summary>
        /// <param name="param0">Parameter 0 for string: The session ID exceeds the maximum allowed size of {0} characters.</param>
        internal static string SessionIdIsOverMaxValue(object param0) {
            return string.Format(Culture, ResourceManager.GetString("SessionIdIsOverMaxValue", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Cannot get entity '{0}' because it is not of type {1}.</summary>
        /// <param name="param0">Parameter 0 for string: Cannot get entity '{0}' because it is not of type {1}.</param>
        /// <param name="param1">Parameter 1 for string: Cannot get entity '{0}' because it is not of type {1}.</param>
        internal static string InvalidManagementEntityType(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("InvalidManagementEntityType", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: {0}.{1}</summary>
        /// <param name="param0">Parameter 0 for string: {0}.{1}</param>
        /// <param name="param1">Parameter 1 for string: {0}.{1}</param>
        internal static string TrackableExceptionMessageFormat(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TrackableExceptionMessageFormat", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: TrackingId:{0}, Timestamp:{1}</summary>
        /// <param name="param0">Parameter 0 for string: TrackingId:{0}, Timestamp:{1}</param>
        /// <param name="param1">Parameter 1 for string: TrackingId:{0}, Timestamp:{1}</param>
        internal static string TrackingIdAndTimestampFormat(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("TrackingIdAndTimestampFormat", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: A system property cannot be removed. The system property specified was '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: A system property cannot be removed. The system property specified was '{0}'.</param>
        internal static string SqlFilterActionCannotRemoveSystemProperty(object param0) {
            return string.Format(Culture, ResourceManager.GetString("SqlFilterActionCannotRemoveSystemProperty", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The specified scope ({0}) is not supported.</summary>
        /// <param name="param0">Parameter 0 for string: The specified scope ({0}) is not supported.</param>
        internal static string FilterScopeNotSupported(object param0) {
            return string.Format(Culture, ResourceManager.GetString("FilterScopeNotSupported", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The specified compatibility level ({0}) is not supported.</summary>
        /// <param name="param0">Parameter 0 for string: The specified compatibility level ({0}) is not supported.</param>
        internal static string NotSupportedCompatibilityLevel(object param0) {
            return string.Format(Culture, ResourceManager.GetString("NotSupportedCompatibilityLevel", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The specified property ({0}) does not exist or it is not a settable property of the {1} class.</summary>
        /// <param name="param0">Parameter 0 for string: The specified property ({0}) does not exist or it is not a settable property of the {1} class.</param>
        /// <param name="param1">Parameter 1 for string: The specified property ({0}) does not exist or it is not a settable property of the {1} class.</param>
        internal static string MessageSetPropertyNotFound(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("MessageSetPropertyNotFound", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: '{0}' is a reserved keyword. Use a delimited identifier if you intended to use a reserved keyword as a property name.</summary>
        /// <param name="param0">Parameter 0 for string: '{0}' is a reserved keyword. Use a delimited identifier if you intended to use a reserved keyword as a property name.</param>
        internal static string SqlFilterReservedKeyword(object param0) {
            return string.Format(Culture, ResourceManager.GetString("SqlFilterReservedKeyword", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The delimited identifier ({0}) was not terminated properly.</summary>
        /// <param name="param0">Parameter 0 for string: The delimited identifier ({0}) was not terminated properly.</param>
        internal static string DelimitedIdentifierNotTerminated(object param0) {
            return string.Format(Culture, ResourceManager.GetString("DelimitedIdentifierNotTerminated", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The string ({0}) was not terminated properly.</summary>
        /// <param name="param0">Parameter 0 for string: The string ({0}) was not terminated properly.</param>
        internal static string StringLiteralNotTerminated(object param0) {
            return string.Format(Culture, ResourceManager.GetString("StringLiteralNotTerminated", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</summary>
        /// <param name="param0">Parameter 0 for string: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</param>
        /// <param name="param1">Parameter 1 for string: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</param>
        /// <param name="param2">Parameter 2 for string: The '{0}' function expects {1} argument(s), but {2} argument(s) was/were specified.</param>
        internal static string FilterFunctionIncorrectNumberOfArguments(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("FilterFunctionIncorrectNumberOfArguments", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: The specified function name ({0}) is unknown. Make sure the function name is correct.</summary>
        /// <param name="param0">Parameter 0 for string: The specified function name ({0}) is unknown. Make sure the function name is correct.</param>
        internal static string FilterUnknownFunctionName(object param0) {
            return string.Format(Culture, ResourceManager.GetString("FilterUnknownFunctionName", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</summary>
        /// <param name="param0">Parameter 0 for string: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</param>
        /// <param name="param1">Parameter 1 for string: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</param>
        /// <param name="param2">Parameter 2 for string: The string ('{0}...') length is {1} and it is longer than allowed. Maximum string length allowed is {2}.</param>
        internal static string StringIsTooLong(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("StringIsTooLong", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: {0} '{1}' contains character(s) that are not allowed by Service Bus. Entity names or path can contain only letters, numbers, periods (.), hyphens (-), and underscores (_).</summary>
        /// <param name="param0">Parameter 0 for string: {0} '{1}' contains character(s) that are not allowed by Service Bus. Entity names or path can contain only letters, numbers, periods (.), hyphens (-), and underscores (_).</param>
        /// <param name="param1">Parameter 1 for string: {0} '{1}' contains character(s) that are not allowed by Service Bus. Entity names or path can contain only letters, numbers, periods (.), hyphens (-), and underscores (_).</param>
        internal static string InvalidCharactersInEntityName(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("InvalidCharactersInEntityName", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The property '{0}' is null or empty.</summary>
        /// <param name="param0">Parameter 0 for string: The property '{0}' is null or empty.</param>
        internal static string PropertyIsNullOrEmpty(object param0) {
            return string.Format(Culture, ResourceManager.GetString("PropertyIsNullOrEmpty", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Messaging entity '{0}' is currently disabled.</summary>
        /// <param name="param0">Parameter 0 for string: Messaging entity '{0}' is currently disabled.</param>
        internal static string MessagingEntityIsDisabledException(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessagingEntityIsDisabledException", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The requested protocol version '{0}' is not supported. The supported version is '{1}'.</summary>
        /// <param name="param0">Parameter 0 for string: The requested protocol version '{0}' is not supported. The supported version is '{1}'.</param>
        /// <param name="param1">Parameter 1 for string: The requested protocol version '{0}' is not supported. The supported version is '{1}'.</param>
        internal static string ProtocolVersionNotSupported(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("ProtocolVersionNotSupported", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: A PropertyReference instance ({0}) is used without being part of RuleCreationAction.Initializes property.</summary>
        /// <param name="param0">Parameter 0 for string: A PropertyReference instance ({0}) is used without being part of RuleCreationAction.Initializes property.</param>
        internal static string PropertyReferenceUsedWithoutInitializes(object param0) {
            return string.Format(Culture, ResourceManager.GetString("PropertyReferenceUsedWithoutInitializes", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Certificate '{0}' is in the untrusted store.</summary>
        /// <param name="param0">Parameter 0 for string: Certificate '{0}' is in the untrusted store.</param>
        internal static string X509InUnTrustedStore(object param0) {
            return string.Format(Culture, ResourceManager.GetString("X509InUnTrustedStore", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Certificate '{0}' is not used in its valid time period.</summary>
        /// <param name="param0">Parameter 0 for string: Certificate '{0}' is not used in its valid time period.</param>
        internal static string X509InvalidUsageTime(object param0) {
            return string.Format(Culture, ResourceManager.GetString("X509InvalidUsageTime", Culture), param0);
        }
        
        /// <summary>Gets localized string like: CRL check failed for cerfiticate '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: CRL check failed for cerfiticate '{0}'.</param>
        internal static string X509CRLCheckFailed(object param0) {
            return string.Format(Culture, ResourceManager.GetString("X509CRLCheckFailed", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unexpected type. Expected {0} or {1}, but received {2}.</summary>
        /// <param name="param0">Parameter 0 for string: Unexpected type. Expected {0} or {1}, but received {2}.</param>
        /// <param name="param1">Parameter 1 for string: Unexpected type. Expected {0} or {1}, but received {2}.</param>
        /// <param name="param2">Parameter 2 for string: Unexpected type. Expected {0} or {1}, but received {2}.</param>
        internal static string ExpectedTypeInvalidCastException(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("ExpectedTypeInvalidCastException", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: Invalid element: {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Invalid element: {0}.</param>
        internal static string InvalidElement(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidElement", Culture), param0);
        }
        
        /// <summary>Gets localized string like: {0} is not a supported channel-type</summary>
        /// <param name="param0">Parameter 0 for string: {0} is not a supported channel-type</param>
        internal static string UnsupportedChannelType(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedChannelType", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unsupported ConnectivityMode '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Unsupported ConnectivityMode '{0}'.</param>
        internal static string UnsupportedConnectivityMode(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedConnectivityMode", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unable to retrieve '{0}' header from message.</summary>
        /// <param name="param0">Parameter 0 for string: Unable to retrieve '{0}' header from message.</param>
        internal static string MessageHeaderRetrieval(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessageHeaderRetrieval", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unable to retrieve '{0}' header from response.</summary>
        /// <param name="param0">Parameter 0 for string: Unable to retrieve '{0}' header from response.</param>
        internal static string ResponseHeaderRetrieval(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ResponseHeaderRetrieval", Culture), param0);
        }
        
        /// <summary>Gets localized string like: {0}: unable to read Atom XML content.</summary>
        /// <param name="param0">Parameter 0 for string: {0}: unable to read Atom XML content.</param>
        internal static string XMLContentReadFault(object param0) {
            return string.Format(Culture, ResourceManager.GetString("XMLContentReadFault", Culture), param0);
        }
        
        /// <summary>Gets localized string like: {0}: ContentType is incorrect</summary>
        /// <param name="param0">Parameter 0 for string: {0}: ContentType is incorrect</param>
        internal static string IncorrectContentTypeFault(object param0) {
            return string.Format(Culture, ResourceManager.GetString("IncorrectContentTypeFault", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</summary>
        /// <param name="param0">Parameter 0 for string: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</param>
        /// <param name="param1">Parameter 1 for string: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</param>
        /// <param name="param2">Parameter 2 for string: Unable to reach {0} via TCP ({1}, {2}) or HTTP (80, 443).</param>
        internal static string UnableToReach(object param0, object param1, object param2) {
            return string.Format(Culture, ResourceManager.GetString("UnableToReach", Culture), param0, param1, param2);
        }
        
        /// <summary>Gets localized string like: Exceeded maximum allowed redirects: {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Exceeded maximum allowed redirects: {0}.</param>
        internal static string MaxRedirectsExceeded(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MaxRedirectsExceeded", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Found {0} DNS claims in authorization context.</summary>
        /// <param name="param0">Parameter 0 for string: Found {0} DNS claims in authorization context.</param>
        internal static string InvalidDNSClaims(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidDNSClaims", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Scheme of baseAddress must be '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Scheme of baseAddress must be '{0}'.</param>
        internal static string BaseAddressSCheme(object param0) {
            return string.Format(Culture, ResourceManager.GetString("BaseAddressSCheme", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unsupported action '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Unsupported action '{0}'.</param>
        internal static string UnsupportedAction(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedAction", Culture), param0);
        }
        
        /// <summary>Gets localized string like: uri provided {0} does not match Service Bus domain: {1}.</summary>
        /// <param name="param0">Parameter 0 for string: uri provided {0} does not match Service Bus domain: {1}.</param>
        /// <param name="param1">Parameter 1 for string: uri provided {0} does not match Service Bus domain: {1}.</param>
        internal static string MismatchServiceBusDomain(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("MismatchServiceBusDomain", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: uri {0} cannot support more than 1 prefix for Service Bus domain: {1}.</summary>
        /// <param name="param0">Parameter 0 for string: uri {0} cannot support more than 1 prefix for Service Bus domain: {1}.</param>
        /// <param name="param1">Parameter 1 for string: uri {0} cannot support more than 1 prefix for Service Bus domain: {1}.</param>
        internal static string UnsupportedServiceBusDomainPrefix(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedServiceBusDomainPrefix", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Unsupported TransportClientCredentialType: '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: Unsupported TransportClientCredentialType: '{0}'.</param>
        internal static string TransportClientCredentialType(object param0) {
            return string.Format(Culture, ResourceManager.GetString("TransportClientCredentialType", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Invalid frame size:{0}, maximum frame size:{1}.</summary>
        /// <param name="param0">Parameter 0 for string: Invalid frame size:{0}, maximum frame size:{1}.</param>
        /// <param name="param1">Parameter 1 for string: Invalid frame size:{0}, maximum frame size:{1}.</param>
        internal static string InvalidFrameSize(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("InvalidFrameSize", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: {0} is not currently supported in BrokeredMessage application properties.</summary>
        /// <param name="param0">Parameter 0 for string: {0} is not currently supported in BrokeredMessage application properties.</param>
        internal static string BrokeredMessageApplicationProperties(object param0) {
            return string.Format(Culture, ResourceManager.GetString("BrokeredMessageApplicationProperties", Culture), param0);
        }
        
        /// <summary>Gets localized string like: {0} is not currently supported in AMQP application properties.</summary>
        /// <param name="param0">Parameter 0 for string: {0} is not currently supported in AMQP application properties.</param>
        internal static string AMPQApplicationProperties(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AMPQApplicationProperties", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Rights cannot be null, empty or greater than {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Rights cannot be null, empty or greater than {0}.</param>
        internal static string NullEmptyRights(object param0) {
            return string.Format(Culture, ResourceManager.GetString("NullEmptyRights", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unsupported Right '{0}'. The Supported Rights are '{1}'.</summary>
        /// <param name="param0">Parameter 0 for string: Unsupported Right '{0}'. The Supported Rights are '{1}'.</param>
        /// <param name="param1">Parameter 1 for string: Unsupported Right '{0}'. The Supported Rights are '{1}'.</param>
        internal static string UnsupportedRight(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedRight", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: GetClaim does not support linkInfo.LinkType '{0}'.</summary>
        /// <param name="param0">Parameter 0 for string: GetClaim does not support linkInfo.LinkType '{0}'.</param>
        internal static string UnsupportedGetClaim(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnsupportedGetClaim", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Invalid scheme value, must be http, or https, or {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Invalid scheme value, must be http, or https, or {0}.</param>
        internal static string InvalidSchemeValue(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidSchemeValue", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Invalid service namespace: \"{0}\".</summary>
        /// <param name="param0">Parameter 0 for string: Invalid service namespace: \"{0}\".</param>
        internal static string InvalidServiceNameSpace(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InvalidServiceNameSpace", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Current environment is onebox but input uri has an invalid path {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Current environment is onebox but input uri has an invalid path {0}.</param>
        internal static string InputURIPath(object param0) {
            return string.Format(Culture, ResourceManager.GetString("InputURIPath", Culture), param0);
        }
        
        /// <summary>Gets localized string like: uri \"{0}\" has an unexpected hostname.</summary>
        /// <param name="param0">Parameter 0 for string: uri \"{0}\" has an unexpected hostname.</param>
        internal static string UnexpedtedURIHostName(object param0) {
            return string.Format(Culture, ResourceManager.GetString("UnexpedtedURIHostName", Culture), param0);
        }
        
        /// <summary>Gets localized string like: uri \"{0}\" has an invalid service namespace.</summary>
        /// <param name="param0">Parameter 0 for string: uri \"{0}\" has an invalid service namespace.</param>
        internal static string URIServiceNameSpace(object param0) {
            return string.Format(Culture, ResourceManager.GetString("URIServiceNameSpace", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Channel Open did not complete in specified time {0}.</summary>
        /// <param name="param0">Parameter 0 for string: Channel Open did not complete in specified time {0}.</param>
        internal static string OpenChannelFailed(object param0) {
            return string.Format(Culture, ResourceManager.GetString("OpenChannelFailed", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The specified parameter ({0}) in Parameters property was not used in the expression specified in SqlExpression.</summary>
        /// <param name="param0">Parameter 0 for string: The specified parameter ({0}) in Parameters property was not used in the expression specified in SqlExpression.</param>
        internal static string ExtraParameterSpecifiedForSqlExpression(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ExtraParameterSpecifiedForSqlExpression", Culture), param0);
        }
        
        /// <summary>Gets localized string like: A parameter ({0}) used in the expression specified in SqlExpression is missing from the Parameters property.</summary>
        /// <param name="param0">Parameter 0 for string: A parameter ({0}) used in the expression specified in SqlExpression is missing from the Parameters property.</param>
        internal static string ParameterNotSpecifiedForSqlExpression(object param0) {
            return string.Format(Culture, ResourceManager.GetString("ParameterNotSpecifiedForSqlExpression", Culture), param0);
        }
        
        /// <summary>Gets localized string like: operation: {0}, state: {1}</summary>
        /// <param name="param0">Parameter 0 for string: operation: {0}, state: {1}</param>
        /// <param name="param1">Parameter 1 for string: operation: {0}, state: {1}</param>
        internal static string AmqpIllegalOperationState(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("AmqpIllegalOperationState", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Uri Bad format: {0}</summary>
        /// <param name="param0">Parameter 0 for string: Uri Bad format: {0}</param>
        internal static string BadUriFormat(object param0) {
            return string.Format(Culture, ResourceManager.GetString("BadUriFormat", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unsupported type {0} for array.</summary>
        /// <param name="param0">Parameter 0 for string: Unsupported type {0} for array.</param>
        internal static string NotSupportFrameCode(object param0) {
            return string.Format(Culture, ResourceManager.GetString("NotSupportFrameCode", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The channel '{0}' cannot be found.</summary>
        /// <param name="param0">Parameter 0 for string: The channel '{0}' cannot be found.</param>
        internal static string AmqpChannelNotFound(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AmqpChannelNotFound", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Cannot allocate more handles. The maximum handle is {0}</summary>
        /// <param name="param0">Parameter 0 for string: Cannot allocate more handles. The maximum handle is {0}</param>
        internal static string AmqpHandleExceeded(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AmqpHandleExceeded", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Other update request is still in progress for the entity {0}</summary>
        /// <param name="param0">Parameter 0 for string: Other update request is still in progress for the entity {0}</param>
        internal static string MessagingEntityUpdateConflict(object param0) {
            return string.Format(Culture, ResourceManager.GetString("MessagingEntityUpdateConflict", Culture), param0);
        }
        
        /// <summary>Gets localized string like: '{0}' is not a supported type.</summary>
        /// <param name="param0">Parameter 0 for string: '{0}' is not a supported type.</param>
        internal static string NotSupportedPropertyType(object param0) {
            return string.Format(Culture, ResourceManager.GetString("NotSupportedPropertyType", Culture), param0);
        }
        
        /// <summary>Gets localized string like: A duplicate property '{0}' is found in the Service Bus connection string.</summary>
        /// <param name="param0">Parameter 0 for string: A duplicate property '{0}' is found in the Service Bus connection string.</param>
        internal static string AppSettingsConfigDuplicateSetting(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AppSettingsConfigDuplicateSetting", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Configuration is missing required information. Make sure the property '{0}' is defined as part of '{1}' key within 'appSettings' section, or Azure configuration settings.</summary>
        /// <param name="param0">Parameter 0 for string: Configuration is missing required information. Make sure the property '{0}' is defined as part of '{1}' key within 'appSettings' section, or Azure configuration settings.</param>
        /// <param name="param1">Parameter 1 for string: Configuration is missing required information. Make sure the property '{0}' is defined as part of '{1}' key within 'appSettings' section, or Azure configuration settings.</param>
        internal static string AppSettingsConfigMissingSetting(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("AppSettingsConfigMissingSetting", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: The Service Bus connection string contains invalid property. '{0}' is not a valid property within the connection string.</summary>
        /// <param name="param0">Parameter 0 for string: The Service Bus connection string contains invalid property. '{0}' is not a valid property within the connection string.</param>
        internal static string AppSettingsConfigSettingInvalidKey(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AppSettingsConfigSettingInvalidKey", Culture), param0);
        }
        
        /// <summary>Gets localized string like: The Service Bus connection string contains invalid value. The property '{0}' has invalid value '{1}'.</summary>
        /// <param name="param0">Parameter 0 for string: The Service Bus connection string contains invalid value. The property '{0}' has invalid value '{1}'.</param>
        /// <param name="param1">Parameter 1 for string: The Service Bus connection string contains invalid value. The property '{0}' has invalid value '{1}'.</param>
        internal static string AppSettingsConfigSettingInvalidValue(object param0, object param1) {
            return string.Format(Culture, ResourceManager.GetString("AppSettingsConfigSettingInvalidValue", Culture), param0, param1);
        }
        
        /// <summary>Gets localized string like: Unable to create MessagingFactory using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</summary>
        /// <param name="param0">Parameter 0 for string: Unable to create MessagingFactory using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</param>
        internal static string AppSettingsCreateFactoryWithInvalidConnectionString(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AppSettingsCreateFactoryWithInvalidConnectionString", Culture), param0);
        }
        
        /// <summary>Gets localized string like: Unable to create NamespaceManager using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</summary>
        /// <param name="param0">Parameter 0 for string: Unable to create NamespaceManager using connection string. {0} See inner exception for details. Check your connection string and then try again. For more information please see http://go.microsoft.com/fwlink/?LinkID=249089</param>
        internal static string AppSettingsCreateManagerWithInvalidConnectionString(object param0) {
            return string.Format(Culture, ResourceManager.GetString("AppSettingsCreateManagerWithInvalidConnectionString", Culture), param0);
        }
    }
}

