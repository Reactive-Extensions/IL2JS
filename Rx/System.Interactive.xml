<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Interactive</name>
    </assembly>
    <members>
        <member name="M:System.Linq.EnumerableEx.Synchronize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Synchronizes all access to source.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.ObserveOn``1(System.Collections.Generic.IEnumerable{``0},System.Concurrency.IScheduler)">
            <summary>
            Runs evaluation of sequence on specified scheduler.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.StartWith``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Prepends a value to a sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.StartWith``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>
            Prepends values to a sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Do``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Do``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action)">
            <summary>
            Invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Do``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action{System.Exception})">
            <summary>
            Invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Do``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})">
            <summary>
            Invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Do``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action{System.Exception},System.Action)">
            <summary>
            Invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Finally``1(System.Collections.Generic.IEnumerable{``0},System.Action)">
            <summary>
            Invokes finallyAction after source sequence terminates normally or by an exception.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.BufferWithCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Projects each value of an enumerable sequence into a buffer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.BufferWithCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Projects each value of an enumerable sequence into a buffer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Defer``1(System.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Returns a sequence that invokes the enumerableFactory function whenever the sequence gets enumerated.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Materialize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Materializes the implicit notifications of a sequence as explicit notification values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Dematerialize``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.Notification{``0}})">
            <summary>
            Dematerializes the explicit notification values of a sequence as implicit notifications.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Scan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over a sequence and returns each intermediate result.  
            The specified seed value is used as the initial accumulator value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Scan``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
            <summary>
            Applies an accumulator function over a sequence and returns each intermediate result.  
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Scan0``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over an observable sequence and returns each intermediate result.  
            The specified seed value is prepended to the sequence once a message comes in.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.DistinctUntilChanged``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Returns a sequence that contains only distinct contiguous values according to the keySelector and comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.DistinctUntilChanged``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values according to the comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.DistinctUntilChanged``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values according to the keySelector.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.DistinctUntilChanged``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an observable sequence that contains only distinct contiguous values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.While``1(System.Func{System.Boolean},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Repeats source as long as condition holds.
            </summary>        
        </member>
        <member name="M:System.Linq.EnumerableEx.If``1(System.Func{System.Boolean},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            If condition is true, then thenSource else elseSource.
            </summary>        
        </member>
        <member name="M:System.Linq.EnumerableEx.DoWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{System.Boolean})">
            <summary>
            Repeats source as long as condition holds.
            </summary>   
        </member>
        <member name="M:System.Linq.EnumerableEx.Case``2(System.Func{``0},System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IEnumerable{``1}},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Uses selector to determine which source in sources to use, uses defaultSource if no match is found.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Case``2(System.Func{``0},System.Collections.Generic.IDictionary{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Uses selector to determine which source in sources to use, empty if no match is found.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.For``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Concatenates the observable sequences obtained by running the resultSelector for each element in source.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Let``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Returns an observable sequence that invokes selector with value whenever a new observer subscribes.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of values at the end of an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns a specified number of contiguous values from the end of an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Projects each value of a sequence to a sequence and flattens the resulting sequences into one sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.OnErrorResumeNext``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Continues the source sequence with the next sequence whether 
            the source sequence terminates normally or by an exception.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.OnErrorResumeNext``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Continues a sequence that is terminated normally or by an exception with the next sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.OnErrorResumeNext``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Continues an observable sequence that is terminated normally or by an exception with the next observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Concat``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Concatenates all sequences.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Concatenates all sequences.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Catch``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Continues a sequence that is terminated by an exception with the next sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Catch``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Continues a sequence that is terminated by an exception with the next sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Catch``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Continues a sequence that is terminated by an exception with the next sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Catch``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Continues a sequence that is terminated by an exception of the specified type with the sequence
            produced by the handler.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
            <summary>
            Merges two sequences into one sequence by using the selector function.
            </summary>        
        </member>
        <member name="M:System.Linq.EnumerableEx.ForkJoin``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Runs all sequences and combines their last values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.ForkJoin``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Runs all sequences and combines their last values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Return``1(``0)">
            <summary>
            Returns a sequence that contains a single value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Throw``1(System.Exception)">
            <summary>
            Returns a sequence that terminates with an exception.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Generate``2(``0,System.Func{``0,System.Boolean},System.Func{``0,``1},System.Func{``0,``0})">
            <summary>
            Generates a sequence by iterating a state from an initial state until
            the condition fails.  For each state, a value is generated dependent
            on the state.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Generate``1(System.Func{System.Collections.Generic.Notification{``0}})">
            <summary>
            Generates an observable sequence by repeatedly calling the function.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Generate``2(``0,System.Func{``0,System.Collections.Generic.Notification{``1}},System.Func{``0,``0})">
            <summary>
            Generates a sequence by iterating a state from an initial state until a completion notification is sent.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Generate``2(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``0})">
            <summary>
            Generates an observable sequence by iterating a state from an initial state until
            the condition fails.  For each state, a sequence  is generated.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Generate``2(``0,System.Func{``0,System.Boolean},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``0})">
            <summary>
            Generates an observable sequence by iterating a state from an initial state until
            the condition fails.  For each state, a sequence is generated.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Using``2(System.Func{``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Retrieves resource from resourceSelector for use in resourceUsage and disposes 
            the resource once the resulting sequence terminates.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Repeat``1(``0)">
            <summary>
            Generates a sequence that contains one repeated value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Repeat``1(``0,System.Int32)">
            <summary>
            Generates an observable sequence that contains one repeated value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Repeat``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Repeats the sequence indefinately.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Repeat``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Repeats the sequence repeatCount times.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Retry``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Repeats the sequence until it successfully terminates.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Retry``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Repeats the source  sequence the retryCount times or until it successfully terminates.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Returns the element with the minimum value by using a specified comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the element with the minimum key value by using the default comparer for keys.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the element with the minimum key value by using a specified key comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Returns the element with the minimum value by using a specified comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the element with the maximum key value by using the default comparer for keys.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the element with the maximum key value by using a specified key comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Run``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Evaluates the sequence for its side-effects.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Run``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Evaluates the sequence and invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Run``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action{System.Exception})">
            <summary>
            Evaluates the sequence and invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Run``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action)">
            <summary>
            Evaluates the sequence and invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Run``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action{System.Exception},System.Action)">
            <summary>
            Evaluates the sequence and invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Run``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})">
            <summary>
            Evaluates the sequence and invokes the action for its side-effects on each value in the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether an observable sequence is empty.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Let``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Bind the source to the parameter so that it can be used multiple times
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MemoizeAll``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an enumerable that enumerates the original enumerable only once and caches its results.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Memoize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an enumerable that enumerates the original enumerable only once and caches its results.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Publish``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Publishes the values of source to each use of the bound parameter.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Publish``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}},``0)">
            <summary>
            Publishes the values of single to each use of the bound parameter starting with an intial value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Replay``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Replays the values of source to each use of the bound parameter.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Replay``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}},System.Int32)">
            <summary>
            Replays bufferSize values of source to each use of the bound parameter.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Prune``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Replays the first value of source to each use of the bound parameter.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Share``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Shares cursor of all enumerators to the sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.Memoize``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Creates an enumerable that enumerates the original enumerable only once and caches its results.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AggregateEnumerable``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
            <summary>
            Applies an accumulator function over sequence. 
            The specified seed value is prepended to the sequence once a message comes in.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AggregateEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
            <summary>
            Applies an accumulator function over an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.IsEmptyEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether an observable sequence is empty.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AnyEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether an observable sequence contains any elements.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AnyEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Determines whether any element of an observable sequence satisfies a condition.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AllEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Determines whether all elements of an observable sequence satisfy a condition.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.ContainsEnumerable``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines whether an observable sequence contains a specified element by using a specified System.Collections.Generic.IEqualityComparer&lt;T&gt;.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.ContainsEnumerable``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Determines whether an observable sequence contains a specified element by using the default equality comparer.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.CountEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an System.Int32 that represents the total number of elements in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an System.Int64 that represents the total number of elements in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the sum of a sequence of System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the sum of a sequence of System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the sum of a sequence of System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the sum of a sequence of System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the sum of a sequence of System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the sum of a sequence of nullable System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the sum of a sequence of nullable System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the sum of a sequence of nullable System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the sum of a sequence of nullable System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.SumEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the sum of a sequence of nullable System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinByEnumerable``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the element in an observable sequence with the minimum key value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinByEnumerable``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the element in an observable sequence with the minimum key value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Returns the minimum value in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Returns the minimum value in an observable sequence of System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Returns the minimum value in an observable sequence of System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Returns the minimum value in an observable sequence of System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns the minimum value in an observable sequence of System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Returns the minimum value in an observable sequence of System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Returns the minimum value in an observable sequence of nullable System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Returns the minimum value in an observable sequence of nullable System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Returns the minimum value in an observable sequence of nullable System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns the minimum value in an observable sequence of nullable System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MinEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Returns the minimum value in an observable sequence of nullable System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxByEnumerable``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the element in an observable sequence with the minimum key value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxByEnumerable``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the element in an observable sequence with the minimum key value.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the minimum value in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Returns the minimum value in an observable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Returns the maximum value in an observable sequence of System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Returns the maximum value in an observable sequence of System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Returns the maximum value in an observable sequence of System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns the maximum value in an observable sequence of System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Returns the maximum value in an observable sequence of System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Returns the maximum value in an observable sequence of nullable System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Returns the maximum value in an observable sequence of nullable System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Returns the maximum value in an observable sequence of nullable System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Returns the maximum value in an observable sequence of nullable System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.MaxEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Returns the maximum value in an observable sequence of nullable System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of System.Int64 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of nullable System.Double values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of nullable System.Float values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of nullable System.Decimal values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of nullable System.Int32 values.
            </summary>
        </member>
        <member name="M:System.Linq.EnumerableEx.AverageEnumerable(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            Computes the AverageEnumerable of an observable sequence of nullable System.Int64 values.
            </summary>
        </member>
        <member name="T:System.Linq.Enumerator">
            <summary>
            Provides a set of static methods for creating enumerators.
            </summary>
        </member>
        <member name="M:System.Linq.Enumerator.AsEnumerator``1(System.Collections.Generic.IEnumerator{``0})">
            <summary>
            Hides the identity of an enumerator.
            </summary>
        </member>
    </members>
</doc>
